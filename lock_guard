/******************************************************************************

Welcome to GDB Online.
  GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
  C#, OCaml, VB, Perl, Swift, Prolog, Javascript, Pascal, COBOL, HTML, CSS, JS
  Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
#include <bits/stdc++.h>

using namespace std;
// In this video we will learn about lock_guard in threading in C++ programming language.

// Few points to remember about the lock_guard is as follows:
// 0. It is very light weight wrapper for owning mutex on scoped basis.
// 1. It acquires mutex lock the moment you create the object of lock_guard.
// 2. It automatically removes the lock while goes out of scope.
// 3. You can not explicitly unlock the lock_guard.
// 4. You can not copy lock_guard.

std::mutex m;
int buffer = 0;

void updateBuffer(int threadID, int loopCount)
{
    std::lock_guard<mutex> lock(m);
    for(int i = 0; i<loopCount; i++)
    {
        cout<<"threadID "<<threadID<<" Buffer Value"<<buffer++<<endl;
    }
}


int main()
{
   thread th1(updateBuffer, 1, 10);
   thread th2(updateBuffer, 2, 10);
   
   th1.join();
   th2.join();

    return 0;
}
